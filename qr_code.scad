module qr_code() {
    translate([-14, 14, 0]) cube([0.99, 0.99, 1]);
    translate([-13, 14, 0]) cube([0.99, 0.99, 1]);
    translate([-12, 14, 0]) cube([0.99, 0.99, 1]);
    translate([-11, 14, 0]) cube([0.99, 0.99, 1]);
    translate([-10, 14, 0]) cube([0.99, 0.99, 1]);
    translate([-9, 14, 0]) cube([0.99, 0.99, 1]);
    translate([-8, 14, 0]) cube([0.99, 0.99, 1]);
    translate([-5, 14, 0]) cube([0.99, 0.99, 1]);
    translate([0, 14, 0]) cube([0.99, 0.99, 1]);
    translate([3, 14, 0]) cube([0.99, 0.99, 1]);
    translate([4, 14, 0]) cube([0.99, 0.99, 1]);
    translate([5, 14, 0]) cube([0.99, 0.99, 1]);
    translate([8, 14, 0]) cube([0.99, 0.99, 1]);
    translate([9, 14, 0]) cube([0.99, 0.99, 1]);
    translate([10, 14, 0]) cube([0.99, 0.99, 1]);
    translate([11, 14, 0]) cube([0.99, 0.99, 1]);
    translate([12, 14, 0]) cube([0.99, 0.99, 1]);
    translate([13, 14, 0]) cube([0.99, 0.99, 1]);
    translate([14, 14, 0]) cube([0.99, 0.99, 1]);
    translate([-14, 13, 0]) cube([0.99, 0.99, 1]);
    translate([-8, 13, 0]) cube([0.99, 0.99, 1]);
    translate([-6, 13, 0]) cube([0.99, 0.99, 1]);
    translate([-5, 13, 0]) cube([0.99, 0.99, 1]);
    translate([-3, 13, 0]) cube([0.99, 0.99, 1]);
    translate([-2, 13, 0]) cube([0.99, 0.99, 1]);
    translate([0, 13, 0]) cube([0.99, 0.99, 1]);
    translate([1, 13, 0]) cube([0.99, 0.99, 1]);
    translate([3, 13, 0]) cube([0.99, 0.99, 1]);
    translate([6, 13, 0]) cube([0.99, 0.99, 1]);
    translate([8, 13, 0]) cube([0.99, 0.99, 1]);
    translate([14, 13, 0]) cube([0.99, 0.99, 1]);
    translate([-14, 12, 0]) cube([0.99, 0.99, 1]);
    translate([-12, 12, 0]) cube([0.99, 0.99, 1]);
    translate([-11, 12, 0]) cube([0.99, 0.99, 1]);
    translate([-10, 12, 0]) cube([0.99, 0.99, 1]);
    translate([-8, 12, 0]) cube([0.99, 0.99, 1]);
    translate([-5, 12, 0]) cube([0.99, 0.99, 1]);
    translate([-4, 12, 0]) cube([0.99, 0.99, 1]);
    translate([-3, 12, 0]) cube([0.99, 0.99, 1]);
    translate([0, 12, 0]) cube([0.99, 0.99, 1]);
    translate([1, 12, 0]) cube([0.99, 0.99, 1]);
    translate([4, 12, 0]) cube([0.99, 0.99, 1]);
    translate([6, 12, 0]) cube([0.99, 0.99, 1]);
    translate([8, 12, 0]) cube([0.99, 0.99, 1]);
    translate([10, 12, 0]) cube([0.99, 0.99, 1]);
    translate([11, 12, 0]) cube([0.99, 0.99, 1]);
    translate([12, 12, 0]) cube([0.99, 0.99, 1]);
    translate([14, 12, 0]) cube([0.99, 0.99, 1]);
    translate([-14, 11, 0]) cube([0.99, 0.99, 1]);
    translate([-12, 11, 0]) cube([0.99, 0.99, 1]);
    translate([-11, 11, 0]) cube([0.99, 0.99, 1]);
    translate([-10, 11, 0]) cube([0.99, 0.99, 1]);
    translate([-8, 11, 0]) cube([0.99, 0.99, 1]);
    translate([-6, 11, 0]) cube([0.99, 0.99, 1]);
    translate([-5, 11, 0]) cube([0.99, 0.99, 1]);
    translate([-3, 11, 0]) cube([0.99, 0.99, 1]);
    translate([-1, 11, 0]) cube([0.99, 0.99, 1]);
    translate([1, 11, 0]) cube([0.99, 0.99, 1]);
    translate([2, 11, 0]) cube([0.99, 0.99, 1]);
    translate([3, 11, 0]) cube([0.99, 0.99, 1]);
    translate([8, 11, 0]) cube([0.99, 0.99, 1]);
    translate([10, 11, 0]) cube([0.99, 0.99, 1]);
    translate([11, 11, 0]) cube([0.99, 0.99, 1]);
    translate([12, 11, 0]) cube([0.99, 0.99, 1]);
    translate([14, 11, 0]) cube([0.99, 0.99, 1]);
    translate([-14, 10, 0]) cube([0.99, 0.99, 1]);
    translate([-12, 10, 0]) cube([0.99, 0.99, 1]);
    translate([-11, 10, 0]) cube([0.99, 0.99, 1]);
    translate([-10, 10, 0]) cube([0.99, 0.99, 1]);
    translate([-8, 10, 0]) cube([0.99, 0.99, 1]);
    translate([-4, 10, 0]) cube([0.99, 0.99, 1]);
    translate([-2, 10, 0]) cube([0.99, 0.99, 1]);
    translate([0, 10, 0]) cube([0.99, 0.99, 1]);
    translate([4, 10, 0]) cube([0.99, 0.99, 1]);
    translate([5, 10, 0]) cube([0.99, 0.99, 1]);
    translate([6, 10, 0]) cube([0.99, 0.99, 1]);
    translate([8, 10, 0]) cube([0.99, 0.99, 1]);
    translate([10, 10, 0]) cube([0.99, 0.99, 1]);
    translate([11, 10, 0]) cube([0.99, 0.99, 1]);
    translate([12, 10, 0]) cube([0.99, 0.99, 1]);
    translate([14, 10, 0]) cube([0.99, 0.99, 1]);
    translate([-14, 9, 0]) cube([0.99, 0.99, 1]);
    translate([-8, 9, 0]) cube([0.99, 0.99, 1]);
    translate([-6, 9, 0]) cube([0.99, 0.99, 1]);
    translate([-4, 9, 0]) cube([0.99, 0.99, 1]);
    translate([0, 9, 0]) cube([0.99, 0.99, 1]);
    translate([1, 9, 0]) cube([0.99, 0.99, 1]);
    translate([3, 9, 0]) cube([0.99, 0.99, 1]);
    translate([4, 9, 0]) cube([0.99, 0.99, 1]);
    translate([6, 9, 0]) cube([0.99, 0.99, 1]);
    translate([8, 9, 0]) cube([0.99, 0.99, 1]);
    translate([14, 9, 0]) cube([0.99, 0.99, 1]);
    translate([-14, 8, 0]) cube([0.99, 0.99, 1]);
    translate([-13, 8, 0]) cube([0.99, 0.99, 1]);
    translate([-12, 8, 0]) cube([0.99, 0.99, 1]);
    translate([-11, 8, 0]) cube([0.99, 0.99, 1]);
    translate([-10, 8, 0]) cube([0.99, 0.99, 1]);
    translate([-9, 8, 0]) cube([0.99, 0.99, 1]);
    translate([-8, 8, 0]) cube([0.99, 0.99, 1]);
    translate([-6, 8, 0]) cube([0.99, 0.99, 1]);
    translate([-4, 8, 0]) cube([0.99, 0.99, 1]);
    translate([-2, 8, 0]) cube([0.99, 0.99, 1]);
    translate([0, 8, 0]) cube([0.99, 0.99, 1]);
    translate([2, 8, 0]) cube([0.99, 0.99, 1]);
    translate([4, 8, 0]) cube([0.99, 0.99, 1]);
    translate([6, 8, 0]) cube([0.99, 0.99, 1]);
    translate([8, 8, 0]) cube([0.99, 0.99, 1]);
    translate([9, 8, 0]) cube([0.99, 0.99, 1]);
    translate([10, 8, 0]) cube([0.99, 0.99, 1]);
    translate([11, 8, 0]) cube([0.99, 0.99, 1]);
    translate([12, 8, 0]) cube([0.99, 0.99, 1]);
    translate([13, 8, 0]) cube([0.99, 0.99, 1]);
    translate([14, 8, 0]) cube([0.99, 0.99, 1]);
    translate([-2, 7, 0]) cube([0.99, 0.99, 1]);
    translate([0, 7, 0]) cube([0.99, 0.99, 1]);
    translate([5, 7, 0]) cube([0.99, 0.99, 1]);
    translate([-14, 6, 0]) cube([0.99, 0.99, 1]);
    translate([-13, 6, 0]) cube([0.99, 0.99, 1]);
    translate([-12, 6, 0]) cube([0.99, 0.99, 1]);
    translate([-11, 6, 0]) cube([0.99, 0.99, 1]);
    translate([-10, 6, 0]) cube([0.99, 0.99, 1]);
    translate([-8, 6, 0]) cube([0.99, 0.99, 1]);
    translate([-7, 6, 0]) cube([0.99, 0.99, 1]);
    translate([-6, 6, 0]) cube([0.99, 0.99, 1]);
    translate([-5, 6, 0]) cube([0.99, 0.99, 1]);
    translate([-4, 6, 0]) cube([0.99, 0.99, 1]);
    translate([-2, 6, 0]) cube([0.99, 0.99, 1]);
    translate([-1, 6, 0]) cube([0.99, 0.99, 1]);
    translate([1, 6, 0]) cube([0.99, 0.99, 1]);
    translate([2, 6, 0]) cube([0.99, 0.99, 1]);
    translate([3, 6, 0]) cube([0.99, 0.99, 1]);
    translate([6, 6, 0]) cube([0.99, 0.99, 1]);
    translate([7, 6, 0]) cube([0.99, 0.99, 1]);
    translate([9, 6, 0]) cube([0.99, 0.99, 1]);
    translate([11, 6, 0]) cube([0.99, 0.99, 1]);
    translate([13, 6, 0]) cube([0.99, 0.99, 1]);
    translate([-13, 5, 0]) cube([0.99, 0.99, 1]);
    translate([-6, 5, 0]) cube([0.99, 0.99, 1]);
    translate([-5, 5, 0]) cube([0.99, 0.99, 1]);
    translate([-1, 5, 0]) cube([0.99, 0.99, 1]);
    translate([0, 5, 0]) cube([0.99, 0.99, 1]);
    translate([3, 5, 0]) cube([0.99, 0.99, 1]);
    translate([4, 5, 0]) cube([0.99, 0.99, 1]);
    translate([5, 5, 0]) cube([0.99, 0.99, 1]);
    translate([6, 5, 0]) cube([0.99, 0.99, 1]);
    translate([7, 5, 0]) cube([0.99, 0.99, 1]);
    translate([8, 5, 0]) cube([0.99, 0.99, 1]);
    translate([9, 5, 0]) cube([0.99, 0.99, 1]);
    translate([10, 5, 0]) cube([0.99, 0.99, 1]);
    translate([14, 5, 0]) cube([0.99, 0.99, 1]);
    translate([-14, 4, 0]) cube([0.99, 0.99, 1]);
    translate([-13, 4, 0]) cube([0.99, 0.99, 1]);
    translate([-12, 4, 0]) cube([0.99, 0.99, 1]);
    translate([-9, 4, 0]) cube([0.99, 0.99, 1]);
    translate([-8, 4, 0]) cube([0.99, 0.99, 1]);
    translate([-7, 4, 0]) cube([0.99, 0.99, 1]);
    translate([-6, 4, 0]) cube([0.99, 0.99, 1]);
    translate([-5, 4, 0]) cube([0.99, 0.99, 1]);
    translate([-3, 4, 0]) cube([0.99, 0.99, 1]);
    translate([-2, 4, 0]) cube([0.99, 0.99, 1]);
    translate([1, 4, 0]) cube([0.99, 0.99, 1]);
    translate([2, 4, 0]) cube([0.99, 0.99, 1]);
    translate([3, 4, 0]) cube([0.99, 0.99, 1]);
    translate([7, 4, 0]) cube([0.99, 0.99, 1]);
    translate([8, 4, 0]) cube([0.99, 0.99, 1]);
    translate([10, 4, 0]) cube([0.99, 0.99, 1]);
    translate([-12, 3, 0]) cube([0.99, 0.99, 1]);
    translate([-11, 3, 0]) cube([0.99, 0.99, 1]);
    translate([-7, 3, 0]) cube([0.99, 0.99, 1]);
    translate([-5, 3, 0]) cube([0.99, 0.99, 1]);
    translate([-4, 3, 0]) cube([0.99, 0.99, 1]);
    translate([-3, 3, 0]) cube([0.99, 0.99, 1]);
    translate([1, 3, 0]) cube([0.99, 0.99, 1]);
    translate([5, 3, 0]) cube([0.99, 0.99, 1]);
    translate([7, 3, 0]) cube([0.99, 0.99, 1]);
    translate([9, 3, 0]) cube([0.99, 0.99, 1]);
    translate([10, 3, 0]) cube([0.99, 0.99, 1]);
    translate([13, 3, 0]) cube([0.99, 0.99, 1]);
    translate([-14, 2, 0]) cube([0.99, 0.99, 1]);
    translate([-12, 2, 0]) cube([0.99, 0.99, 1]);
    translate([-11, 2, 0]) cube([0.99, 0.99, 1]);
    translate([-9, 2, 0]) cube([0.99, 0.99, 1]);
    translate([-8, 2, 0]) cube([0.99, 0.99, 1]);
    translate([-6, 2, 0]) cube([0.99, 0.99, 1]);
    translate([-5, 2, 0]) cube([0.99, 0.99, 1]);
    translate([-3, 2, 0]) cube([0.99, 0.99, 1]);
    translate([1, 2, 0]) cube([0.99, 0.99, 1]);
    translate([2, 2, 0]) cube([0.99, 0.99, 1]);
    translate([3, 2, 0]) cube([0.99, 0.99, 1]);
    translate([6, 2, 0]) cube([0.99, 0.99, 1]);
    translate([9, 2, 0]) cube([0.99, 0.99, 1]);
    translate([11, 2, 0]) cube([0.99, 0.99, 1]);
    translate([12, 2, 0]) cube([0.99, 0.99, 1]);
    translate([-14, 1, 0]) cube([0.99, 0.99, 1]);
    translate([-10, 1, 0]) cube([0.99, 0.99, 1]);
    translate([-9, 1, 0]) cube([0.99, 0.99, 1]);
    translate([-5, 1, 0]) cube([0.99, 0.99, 1]);
    translate([-4, 1, 0]) cube([0.99, 0.99, 1]);
    translate([-2, 1, 0]) cube([0.99, 0.99, 1]);
    translate([-1, 1, 0]) cube([0.99, 0.99, 1]);
    translate([3, 1, 0]) cube([0.99, 0.99, 1]);
    translate([4, 1, 0]) cube([0.99, 0.99, 1]);
    translate([5, 1, 0]) cube([0.99, 0.99, 1]);
    translate([6, 1, 0]) cube([0.99, 0.99, 1]);
    translate([7, 1, 0]) cube([0.99, 0.99, 1]);
    translate([8, 1, 0]) cube([0.99, 0.99, 1]);
    translate([9, 1, 0]) cube([0.99, 0.99, 1]);
    translate([10, 1, 0]) cube([0.99, 0.99, 1]);
    translate([12, 1, 0]) cube([0.99, 0.99, 1]);
    translate([14, 1, 0]) cube([0.99, 0.99, 1]);
    translate([-14, 0, 0]) cube([0.99, 0.99, 1]);
    translate([-13, 0, 0]) cube([0.99, 0.99, 1]);
    translate([-12, 0, 0]) cube([0.99, 0.99, 1]);
    translate([-10, 0, 0]) cube([0.99, 0.99, 1]);
    translate([-9, 0, 0]) cube([0.99, 0.99, 1]);
    translate([-8, 0, 0]) cube([0.99, 0.99, 1]);
    translate([-7, 0, 0]) cube([0.99, 0.99, 1]);
    translate([-6, 0, 0]) cube([0.99, 0.99, 1]);
    translate([-5, 0, 0]) cube([0.99, 0.99, 1]);
    translate([-4, 0, 0]) cube([0.99, 0.99, 1]);
    translate([-1, 0, 0]) cube([0.99, 0.99, 1]);
    translate([0, 0, 0]) cube([0.99, 0.99, 1]);
    translate([1, 0, 0]) cube([0.99, 0.99, 1]);
    translate([6, 0, 0]) cube([0.99, 0.99, 1]);
    translate([7, 0, 0]) cube([0.99, 0.99, 1]);
    translate([8, 0, 0]) cube([0.99, 0.99, 1]);
    translate([12, 0, 0]) cube([0.99, 0.99, 1]);
    translate([-12, -1, 0]) cube([0.99, 0.99, 1]);
    translate([-9, -1, 0]) cube([0.99, 0.99, 1]);
    translate([-7, -1, 0]) cube([0.99, 0.99, 1]);
    translate([-4, -1, 0]) cube([0.99, 0.99, 1]);
    translate([-2, -1, 0]) cube([0.99, 0.99, 1]);
    translate([-1, -1, 0]) cube([0.99, 0.99, 1]);
    translate([6, -1, 0]) cube([0.99, 0.99, 1]);
    translate([9, -1, 0]) cube([0.99, 0.99, 1]);
    translate([13, -1, 0]) cube([0.99, 0.99, 1]);
    translate([-14, -2, 0]) cube([0.99, 0.99, 1]);
    translate([-12, -2, 0]) cube([0.99, 0.99, 1]);
    translate([-9, -2, 0]) cube([0.99, 0.99, 1]);
    translate([-8, -2, 0]) cube([0.99, 0.99, 1]);
    translate([-7, -2, 0]) cube([0.99, 0.99, 1]);
    translate([-6, -2, 0]) cube([0.99, 0.99, 1]);
    translate([-5, -2, 0]) cube([0.99, 0.99, 1]);
    translate([-2, -2, 0]) cube([0.99, 0.99, 1]);
    translate([0, -2, 0]) cube([0.99, 0.99, 1]);
    translate([2, -2, 0]) cube([0.99, 0.99, 1]);
    translate([3, -2, 0]) cube([0.99, 0.99, 1]);
    translate([4, -2, 0]) cube([0.99, 0.99, 1]);
    translate([12, -2, 0]) cube([0.99, 0.99, 1]);
    translate([-14, -3, 0]) cube([0.99, 0.99, 1]);
    translate([-13, -3, 0]) cube([0.99, 0.99, 1]);
    translate([-11, -3, 0]) cube([0.99, 0.99, 1]);
    translate([-7, -3, 0]) cube([0.99, 0.99, 1]);
    translate([-6, -3, 0]) cube([0.99, 0.99, 1]);
    translate([-5, -3, 0]) cube([0.99, 0.99, 1]);
    translate([-4, -3, 0]) cube([0.99, 0.99, 1]);
    translate([3, -3, 0]) cube([0.99, 0.99, 1]);
    translate([4, -3, 0]) cube([0.99, 0.99, 1]);
    translate([5, -3, 0]) cube([0.99, 0.99, 1]);
    translate([6, -3, 0]) cube([0.99, 0.99, 1]);
    translate([7, -3, 0]) cube([0.99, 0.99, 1]);
    translate([8, -3, 0]) cube([0.99, 0.99, 1]);
    translate([10, -3, 0]) cube([0.99, 0.99, 1]);
    translate([11, -3, 0]) cube([0.99, 0.99, 1]);
    translate([12, -3, 0]) cube([0.99, 0.99, 1]);
    translate([14, -3, 0]) cube([0.99, 0.99, 1]);
    translate([-14, -4, 0]) cube([0.99, 0.99, 1]);
    translate([-10, -4, 0]) cube([0.99, 0.99, 1]);
    translate([-9, -4, 0]) cube([0.99, 0.99, 1]);
    translate([-8, -4, 0]) cube([0.99, 0.99, 1]);
    translate([-7, -4, 0]) cube([0.99, 0.99, 1]);
    translate([-6, -4, 0]) cube([0.99, 0.99, 1]);
    translate([-5, -4, 0]) cube([0.99, 0.99, 1]);
    translate([-3, -4, 0]) cube([0.99, 0.99, 1]);
    translate([-2, -4, 0]) cube([0.99, 0.99, 1]);
    translate([1, -4, 0]) cube([0.99, 0.99, 1]);
    translate([2, -4, 0]) cube([0.99, 0.99, 1]);
    translate([3, -4, 0]) cube([0.99, 0.99, 1]);
    translate([8, -4, 0]) cube([0.99, 0.99, 1]);
    translate([9, -4, 0]) cube([0.99, 0.99, 1]);
    translate([11, -4, 0]) cube([0.99, 0.99, 1]);
    translate([12, -4, 0]) cube([0.99, 0.99, 1]);
    translate([-14, -5, 0]) cube([0.99, 0.99, 1]);
    translate([-12, -5, 0]) cube([0.99, 0.99, 1]);
    translate([-11, -5, 0]) cube([0.99, 0.99, 1]);
    translate([-9, -5, 0]) cube([0.99, 0.99, 1]);
    translate([-6, -5, 0]) cube([0.99, 0.99, 1]);
    translate([-5, -5, 0]) cube([0.99, 0.99, 1]);
    translate([-3, -5, 0]) cube([0.99, 0.99, 1]);
    translate([0, -5, 0]) cube([0.99, 0.99, 1]);
    translate([2, -5, 0]) cube([0.99, 0.99, 1]);
    translate([5, -5, 0]) cube([0.99, 0.99, 1]);
    translate([6, -5, 0]) cube([0.99, 0.99, 1]);
    translate([7, -5, 0]) cube([0.99, 0.99, 1]);
    translate([8, -5, 0]) cube([0.99, 0.99, 1]);
    translate([9, -5, 0]) cube([0.99, 0.99, 1]);
    translate([10, -5, 0]) cube([0.99, 0.99, 1]);
    translate([13, -5, 0]) cube([0.99, 0.99, 1]);
    translate([-14, -6, 0]) cube([0.99, 0.99, 1]);
    translate([-8, -6, 0]) cube([0.99, 0.99, 1]);
    translate([-7, -6, 0]) cube([0.99, 0.99, 1]);
    translate([-6, -6, 0]) cube([0.99, 0.99, 1]);
    translate([-3, -6, 0]) cube([0.99, 0.99, 1]);
    translate([1, -6, 0]) cube([0.99, 0.99, 1]);
    translate([3, -6, 0]) cube([0.99, 0.99, 1]);
    translate([6, -6, 0]) cube([0.99, 0.99, 1]);
    translate([7, -6, 0]) cube([0.99, 0.99, 1]);
    translate([8, -6, 0]) cube([0.99, 0.99, 1]);
    translate([9, -6, 0]) cube([0.99, 0.99, 1]);
    translate([10, -6, 0]) cube([0.99, 0.99, 1]);
    translate([12, -6, 0]) cube([0.99, 0.99, 1]);
    translate([13, -6, 0]) cube([0.99, 0.99, 1]);
    translate([14, -6, 0]) cube([0.99, 0.99, 1]);
    translate([-6, -7, 0]) cube([0.99, 0.99, 1]);
    translate([-5, -7, 0]) cube([0.99, 0.99, 1]);
    translate([-2, -7, 0]) cube([0.99, 0.99, 1]);
    translate([-1, -7, 0]) cube([0.99, 0.99, 1]);
    translate([0, -7, 0]) cube([0.99, 0.99, 1]);
    translate([2, -7, 0]) cube([0.99, 0.99, 1]);
    translate([5, -7, 0]) cube([0.99, 0.99, 1]);
    translate([6, -7, 0]) cube([0.99, 0.99, 1]);
    translate([10, -7, 0]) cube([0.99, 0.99, 1]);
    translate([11, -7, 0]) cube([0.99, 0.99, 1]);
    translate([12, -7, 0]) cube([0.99, 0.99, 1]);
    translate([13, -7, 0]) cube([0.99, 0.99, 1]);
    translate([14, -7, 0]) cube([0.99, 0.99, 1]);
    translate([-14, -8, 0]) cube([0.99, 0.99, 1]);
    translate([-13, -8, 0]) cube([0.99, 0.99, 1]);
    translate([-12, -8, 0]) cube([0.99, 0.99, 1]);
    translate([-11, -8, 0]) cube([0.99, 0.99, 1]);
    translate([-10, -8, 0]) cube([0.99, 0.99, 1]);
    translate([-9, -8, 0]) cube([0.99, 0.99, 1]);
    translate([-8, -8, 0]) cube([0.99, 0.99, 1]);
    translate([-6, -8, 0]) cube([0.99, 0.99, 1]);
    translate([-5, -8, 0]) cube([0.99, 0.99, 1]);
    translate([-4, -8, 0]) cube([0.99, 0.99, 1]);
    translate([-1, -8, 0]) cube([0.99, 0.99, 1]);
    translate([0, -8, 0]) cube([0.99, 0.99, 1]);
    translate([1, -8, 0]) cube([0.99, 0.99, 1]);
    translate([5, -8, 0]) cube([0.99, 0.99, 1]);
    translate([6, -8, 0]) cube([0.99, 0.99, 1]);
    translate([8, -8, 0]) cube([0.99, 0.99, 1]);
    translate([10, -8, 0]) cube([0.99, 0.99, 1]);
    translate([11, -8, 0]) cube([0.99, 0.99, 1]);
    translate([12, -8, 0]) cube([0.99, 0.99, 1]);
    translate([-14, -9, 0]) cube([0.99, 0.99, 1]);
    translate([-8, -9, 0]) cube([0.99, 0.99, 1]);
    translate([-5, -9, 0]) cube([0.99, 0.99, 1]);
    translate([-2, -9, 0]) cube([0.99, 0.99, 1]);
    translate([-1, -9, 0]) cube([0.99, 0.99, 1]);
    translate([2, -9, 0]) cube([0.99, 0.99, 1]);
    translate([4, -9, 0]) cube([0.99, 0.99, 1]);
    translate([5, -9, 0]) cube([0.99, 0.99, 1]);
    translate([6, -9, 0]) cube([0.99, 0.99, 1]);
    translate([10, -9, 0]) cube([0.99, 0.99, 1]);
    translate([11, -9, 0]) cube([0.99, 0.99, 1]);
    translate([14, -9, 0]) cube([0.99, 0.99, 1]);
    translate([-14, -10, 0]) cube([0.99, 0.99, 1]);
    translate([-12, -10, 0]) cube([0.99, 0.99, 1]);
    translate([-11, -10, 0]) cube([0.99, 0.99, 1]);
    translate([-10, -10, 0]) cube([0.99, 0.99, 1]);
    translate([-8, -10, 0]) cube([0.99, 0.99, 1]);
    translate([-6, -10, 0]) cube([0.99, 0.99, 1]);
    translate([-4, -10, 0]) cube([0.99, 0.99, 1]);
    translate([-2, -10, 0]) cube([0.99, 0.99, 1]);
    translate([0, -10, 0]) cube([0.99, 0.99, 1]);
    translate([3, -10, 0]) cube([0.99, 0.99, 1]);
    translate([6, -10, 0]) cube([0.99, 0.99, 1]);
    translate([7, -10, 0]) cube([0.99, 0.99, 1]);
    translate([8, -10, 0]) cube([0.99, 0.99, 1]);
    translate([9, -10, 0]) cube([0.99, 0.99, 1]);
    translate([10, -10, 0]) cube([0.99, 0.99, 1]);
    translate([11, -10, 0]) cube([0.99, 0.99, 1]);
    translate([12, -10, 0]) cube([0.99, 0.99, 1]);
    translate([-14, -11, 0]) cube([0.99, 0.99, 1]);
    translate([-12, -11, 0]) cube([0.99, 0.99, 1]);
    translate([-11, -11, 0]) cube([0.99, 0.99, 1]);
    translate([-10, -11, 0]) cube([0.99, 0.99, 1]);
    translate([-8, -11, 0]) cube([0.99, 0.99, 1]);
    translate([-6, -11, 0]) cube([0.99, 0.99, 1]);
    translate([-4, -11, 0]) cube([0.99, 0.99, 1]);
    translate([2, -11, 0]) cube([0.99, 0.99, 1]);
    translate([3, -11, 0]) cube([0.99, 0.99, 1]);
    translate([4, -11, 0]) cube([0.99, 0.99, 1]);
    translate([5, -11, 0]) cube([0.99, 0.99, 1]);
    translate([9, -11, 0]) cube([0.99, 0.99, 1]);
    translate([11, -11, 0]) cube([0.99, 0.99, 1]);
    translate([13, -11, 0]) cube([0.99, 0.99, 1]);
    translate([14, -11, 0]) cube([0.99, 0.99, 1]);
    translate([-14, -12, 0]) cube([0.99, 0.99, 1]);
    translate([-12, -12, 0]) cube([0.99, 0.99, 1]);
    translate([-11, -12, 0]) cube([0.99, 0.99, 1]);
    translate([-10, -12, 0]) cube([0.99, 0.99, 1]);
    translate([-8, -12, 0]) cube([0.99, 0.99, 1]);
    translate([-6, -12, 0]) cube([0.99, 0.99, 1]);
    translate([-4, -12, 0]) cube([0.99, 0.99, 1]);
    translate([-3, -12, 0]) cube([0.99, 0.99, 1]);
    translate([-2, -12, 0]) cube([0.99, 0.99, 1]);
    translate([1, -12, 0]) cube([0.99, 0.99, 1]);
    translate([2, -12, 0]) cube([0.99, 0.99, 1]);
    translate([4, -12, 0]) cube([0.99, 0.99, 1]);
    translate([6, -12, 0]) cube([0.99, 0.99, 1]);
    translate([7, -12, 0]) cube([0.99, 0.99, 1]);
    translate([8, -12, 0]) cube([0.99, 0.99, 1]);
    translate([9, -12, 0]) cube([0.99, 0.99, 1]);
    translate([10, -12, 0]) cube([0.99, 0.99, 1]);
    translate([11, -12, 0]) cube([0.99, 0.99, 1]);
    translate([12, -12, 0]) cube([0.99, 0.99, 1]);
    translate([13, -12, 0]) cube([0.99, 0.99, 1]);
    translate([-14, -13, 0]) cube([0.99, 0.99, 1]);
    translate([-8, -13, 0]) cube([0.99, 0.99, 1]);
    translate([-6, -13, 0]) cube([0.99, 0.99, 1]);
    translate([-4, -13, 0]) cube([0.99, 0.99, 1]);
    translate([-3, -13, 0]) cube([0.99, 0.99, 1]);
    translate([0, -13, 0]) cube([0.99, 0.99, 1]);
    translate([1, -13, 0]) cube([0.99, 0.99, 1]);
    translate([4, -13, 0]) cube([0.99, 0.99, 1]);
    translate([6, -13, 0]) cube([0.99, 0.99, 1]);
    translate([9, -13, 0]) cube([0.99, 0.99, 1]);
    translate([11, -13, 0]) cube([0.99, 0.99, 1]);
    translate([13, -13, 0]) cube([0.99, 0.99, 1]);
    translate([-14, -14, 0]) cube([0.99, 0.99, 1]);
    translate([-13, -14, 0]) cube([0.99, 0.99, 1]);
    translate([-12, -14, 0]) cube([0.99, 0.99, 1]);
    translate([-11, -14, 0]) cube([0.99, 0.99, 1]);
    translate([-10, -14, 0]) cube([0.99, 0.99, 1]);
    translate([-9, -14, 0]) cube([0.99, 0.99, 1]);
    translate([-8, -14, 0]) cube([0.99, 0.99, 1]);
    translate([-6, -14, 0]) cube([0.99, 0.99, 1]);
    translate([-3, -14, 0]) cube([0.99, 0.99, 1]);
    translate([3, -14, 0]) cube([0.99, 0.99, 1]);
    translate([5, -14, 0]) cube([0.99, 0.99, 1]);
    translate([8, -14, 0]) cube([0.99, 0.99, 1]);
    translate([9, -14, 0]) cube([0.99, 0.99, 1]);
    translate([10, -14, 0]) cube([0.99, 0.99, 1]);
    translate([11, -14, 0]) cube([0.99, 0.99, 1]);
    translate([12, -14, 0]) cube([0.99, 0.99, 1]);
}
qr_code_size = 29;
